/**
 * 
 */
package genericXMLProcessor.xmlSerDeser;

import genericXMLProcessor.SerDeser.Deserialize;
import genericXMLProcessor.SerDeser.Serialize;
import java.io.PrintWriter;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

/**
 * @author Abhishek
 * 
 */
public class XMLHandler implements InvocationHandler {

	@Override
	public Object invoke(Object proxy, Method method, Object[] args)
			throws Throwable {
		if (method.getName().equals("writeXML")) {

			Serialize serialize = new Serialize((String) args[1]);
			PrintWriter writer;
			if(writer == null)
				System.out.println("IM NULL");
			writer = Serialize.getInstance();
			serialize.serializeObject((Object) args[0]);
			writer.close();
			writer = null;
			
		} else if (method.getName().equals("readXML")) {
			
			Deserialize deserialize = new Deserialize((String) args[0]);
			return deserialize.deserializeFile();
			
		}
		return null;
	}
}
